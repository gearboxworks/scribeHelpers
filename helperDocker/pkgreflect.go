// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package helperDocker

import "reflect"

var Types = map[string]reflect.Type{
	"Container": reflect.TypeOf((*Container)(nil)).Elem(),
	"Containers": reflect.TypeOf((*Containers)(nil)).Elem(),
	"DockerGear": reflect.TypeOf((*DockerGear)(nil)).Elem(),
	"Environment": reflect.TypeOf((*Environment)(nil)).Elem(),
	"ExecCommand": reflect.TypeOf((*ExecCommand)(nil)).Elem(),
	"Image": reflect.TypeOf((*Image)(nil)).Elem(),
	"PullEvent": reflect.TypeOf((*PullEvent)(nil)).Elem(),
	"Ssh": reflect.TypeOf((*Ssh)(nil)).Elem(),
	"SshAuth": reflect.TypeOf((*SshAuth)(nil)).Elem(),
	"SshAuthArgs": reflect.TypeOf((*SshAuthArgs)(nil)).Elem(),
	"SshClientArgs": reflect.TypeOf((*SshClientArgs)(nil)).Elem(),
	"StatusLine": reflect.TypeOf((*StatusLine)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"MatchContainer": reflect.ValueOf(MatchContainer),
	"MatchImage": reflect.ValueOf(MatchImage),
	"MatchTag": reflect.ValueOf(MatchTag),
	"New": reflect.ValueOf(New),
	"NewContainer": reflect.ValueOf(NewContainer),
	"NewImage": reflect.ValueOf(NewImage),
	"NewSshAuth": reflect.ValueOf(NewSshAuth),
	"NewSshClient": reflect.ValueOf(NewSshClient),
	"ParseHostURL": reflect.ValueOf(ParseHostURL),
	"SshAuthenticate": reflect.ValueOf(SshAuthenticate),
}

var Variables = map[string]reflect.Value{
	"RunAs": reflect.ValueOf(&RunAs),
}

var Consts = map[string]reflect.Value{
	"DefaultBrandName": reflect.ValueOf(DefaultBrandName),
	"DefaultCommandName": reflect.ValueOf(DefaultCommandName),
	"DefaultKeyFile": reflect.ValueOf(DefaultKeyFile),
	"DefaultNetwork": reflect.ValueOf(DefaultNetwork),
	"DefaultOrganization": reflect.ValueOf(DefaultOrganization),
	"DefaultPassword": reflect.ValueOf(DefaultPassword),
	"DefaultPathCwd": reflect.ValueOf(DefaultPathCwd),
	"DefaultPathEmpty": reflect.ValueOf(DefaultPathEmpty),
	"DefaultPathHome": reflect.ValueOf(DefaultPathHome),
	"DefaultPathNone": reflect.ValueOf(DefaultPathNone),
	"DefaultProject": reflect.ValueOf(DefaultProject),
	"DefaultProvider": reflect.ValueOf(DefaultProvider),
	"DefaultSshHost": reflect.ValueOf(DefaultSshHost),
	"DefaultSshPort": reflect.ValueOf(DefaultSshPort),
	"DefaultStatusLineUpdateDelay": reflect.ValueOf(DefaultStatusLineUpdateDelay),
	"DefaultTimeout": reflect.ValueOf(DefaultTimeout),
	"DefaultUnitTestCmd": reflect.ValueOf(DefaultUnitTestCmd),
	"DefaultUsername": reflect.ValueOf(DefaultUsername),
	"OnlyOnce": reflect.ValueOf(OnlyOnce),
	"SshHostPrivateKey": reflect.ValueOf(SshHostPrivateKey),
	"SshHostPublicKey": reflect.ValueOf(SshHostPublicKey),
}

