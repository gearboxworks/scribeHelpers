// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package toolUx

import "reflect"

var Types = map[string]reflect.Type{
}

var Functions = map[string]reflect.Value{
	"ToolPrintError": reflect.ValueOf(ToolPrintError),
	"ToolPrintf": reflect.ValueOf(ToolPrintf),
	"ToolPrintfBlue": reflect.ValueOf(ToolPrintfBlue),
	"ToolPrintfCyan": reflect.ValueOf(ToolPrintfCyan),
	"ToolPrintfError": reflect.ValueOf(ToolPrintfError),
	"ToolPrintfGreen": reflect.ValueOf(ToolPrintfGreen),
	"ToolPrintfMagenta": reflect.ValueOf(ToolPrintfMagenta),
	"ToolPrintfOk": reflect.ValueOf(ToolPrintfOk),
	"ToolPrintfRed": reflect.ValueOf(ToolPrintfRed),
	"ToolPrintfWarning": reflect.ValueOf(ToolPrintfWarning),
	"ToolPrintfWhite": reflect.ValueOf(ToolPrintfWhite),
	"ToolPrintfYellow": reflect.ValueOf(ToolPrintfYellow),
	"ToolPrintfln": reflect.ValueOf(ToolPrintfln),
	"ToolPrintflnBlue": reflect.ValueOf(ToolPrintflnBlue),
	"ToolPrintflnCyan": reflect.ValueOf(ToolPrintflnCyan),
	"ToolPrintflnError": reflect.ValueOf(ToolPrintflnError),
	"ToolPrintflnGreen": reflect.ValueOf(ToolPrintflnGreen),
	"ToolPrintflnMagenta": reflect.ValueOf(ToolPrintflnMagenta),
	"ToolPrintflnOk": reflect.ValueOf(ToolPrintflnOk),
	"ToolPrintflnRed": reflect.ValueOf(ToolPrintflnRed),
	"ToolPrintflnWarning": reflect.ValueOf(ToolPrintflnWarning),
	"ToolPrintflnWhite": reflect.ValueOf(ToolPrintflnWhite),
	"ToolPrintflnYellow": reflect.ValueOf(ToolPrintflnYellow),
	"ToolPrintln": reflect.ValueOf(ToolPrintln),
}

var Variables = map[string]reflect.Value{
	"GetTools": reflect.ValueOf(&GetTools),
}

var Consts = map[string]reflect.Value{
	"OnlyOnce": reflect.ValueOf(OnlyOnce),
	"ToolPrefix": reflect.ValueOf(ToolPrefix),
}

