// Code generated by github.com/newclarity/PackageReflect DO NOT EDIT.

package toolPrompt

import "reflect"

var Types = map[string]reflect.Type{
	"TypePrompt": reflect.TypeOf((*TypePrompt)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"New": reflect.ValueOf(New),
	"ToolUserPrompt": reflect.ValueOf(ToolUserPrompt),
	"ToolUserPromptBool": reflect.ValueOf(ToolUserPromptBool),
	"ToolUserPromptHidden": reflect.ValueOf(ToolUserPromptHidden),
	"UserPrompt": reflect.ValueOf(UserPrompt),
	"UserPromptHidden": reflect.ValueOf(UserPromptHidden),
}

var Variables = map[string]reflect.Value{
	"GetTools": reflect.ValueOf(&GetTools),
}

var Consts = map[string]reflect.Value{
	"ToolPrefix": reflect.ValueOf(ToolPrefix),
}

