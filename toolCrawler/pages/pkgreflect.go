// Code generated by github.com/newclarity/PackageReflect DO NOT EDIT.

package pages

import "reflect"

var Types = map[string]reflect.Type{
	"Attribute": reflect.TypeOf((*Attribute)(nil)).Elem(),
	"AttributeMap": reflect.TypeOf((*AttributeMap)(nil)).Elem(),
	"Attributes": reflect.TypeOf((*Attributes)(nil)).Elem(),
	"Element": reflect.TypeOf((*Element)(nil)).Elem(),
	"Elements": reflect.TypeOf((*Elements)(nil)).Elem(),
	"ElementsMap": reflect.TypeOf((*ElementsMap)(nil)).Elem(),
	"Hash": reflect.TypeOf((*Hash)(nil)).Elem(),
	"Header": reflect.TypeOf((*Header)(nil)).Elem(),
	"HeaderMap": reflect.TypeOf((*HeaderMap)(nil)).Elem(),
	"HtmlBody": reflect.TypeOf((*HtmlBody)(nil)).Elem(),
	"Page": reflect.TypeOf((*Page)(nil)).Elem(),
	"PageMap": reflect.TypeOf((*PageMap)(nil)).Elem(),
	"Pages": reflect.TypeOf((*Pages)(nil)).Elem(),
	"Properties": reflect.TypeOf((*Properties)(nil)).Elem(),
	"Property": reflect.TypeOf((*Property)(nil)).Elem(),
	"PropertyMap": reflect.TypeOf((*PropertyMap)(nil)).Elem(),
	"PropertyName": reflect.TypeOf((*PropertyName)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"IsIndexable": reflect.ValueOf(IsIndexable),
	"NewAttribute": reflect.ValueOf(NewAttribute),
	"NewElement": reflect.ValueOf(NewElement),
	"NewHash": reflect.ValueOf(NewHash),
	"NewPage": reflect.ValueOf(NewPage),
}

var Variables = map[string]reflect.Value{
}

var Consts = map[string]reflect.Value{
}

