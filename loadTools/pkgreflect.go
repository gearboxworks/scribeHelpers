// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package loadTools

import "reflect"

var Types = map[string]reflect.Type{
	"FileInfo": reflect.TypeOf((*FileInfo)(nil)).Elem(),
	"Go": reflect.TypeOf((*Files)(nil)).Elem(),
	"PkgReflect": reflect.TypeOf((*PkgReflect)(nil)).Elem(),
	"SortedTools": reflect.TypeOf((*SortedTools)(nil)).Elem(),
	"Tool": reflect.TypeOf((*Tool)(nil)).Elem(),
	"Tools": reflect.TypeOf((*Tools)(nil)).Elem(),
	"TypeArgFile": reflect.TypeOf((*TypeArgFile)(nil)).Elem(),
	"TypeScribeArgs": reflect.TypeOf((*TypeScribeArgs)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"AddTools": reflect.ValueOf(AddTools),
	"DiscoverTools": reflect.ValueOf(DiscoverTools),
	"New": reflect.ValueOf(New),
	"NewJsonStruct": reflect.ValueOf(NewJsonStruct),
	"PackageReflect": reflect.ValueOf(PackageReflect),
	"PrintTools": reflect.ValueOf(PrintTools),
	"UnescapeString": reflect.ValueOf(UnescapeString),
}

var Variables = map[string]reflect.Value{
}

var Consts = map[string]reflect.Value{
	"CmdBuild": reflect.ValueOf(CmdBuild),
	"CmdConvert": reflect.ValueOf(CmdConvert),
	"CmdLoad": reflect.ValueOf(CmdLoad),
	"CmdPush": reflect.ValueOf(CmdPush),
	"CmdRelease": reflect.ValueOf(CmdRelease),
	"CmdRun": reflect.ValueOf(CmdRun),
	"CmdTools": reflect.ValueOf(CmdTools),
	"DefaultJsonFile": reflect.ValueOf(DefaultJsonFile),
	"DefaultJsonFileSuffix": reflect.ValueOf(DefaultJsonFileSuffix),
	"DefaultJsonString": reflect.ValueOf(DefaultJsonString),
	"DefaultOutFile": reflect.ValueOf(DefaultOutFile),
	"DefaultTemplateFile": reflect.ValueOf(DefaultTemplateFile),
	"DefaultTemplateFileSuffix": reflect.ValueOf(DefaultTemplateFileSuffix),
	"DefaultTemplateString": reflect.ValueOf(DefaultTemplateString),
	"DefaultWorkingPath": reflect.ValueOf(DefaultWorkingPath),
	"FlagChdir": reflect.ValueOf(FlagChdir),
	"FlagDebug": reflect.ValueOf(FlagDebug),
	"FlagForce": reflect.ValueOf(FlagForce),
	"FlagHelpAll": reflect.ValueOf(FlagHelpAll),
	"FlagHelpExamples": reflect.ValueOf(FlagHelpExamples),
	"FlagHelpFunctions": reflect.ValueOf(FlagHelpFunctions),
	"FlagHelpVariables": reflect.ValueOf(FlagHelpVariables),
	"FlagJsonFile": reflect.ValueOf(FlagJsonFile),
	"FlagOutputFile": reflect.ValueOf(FlagOutputFile),
	"FlagQuiet": reflect.ValueOf(FlagQuiet),
	"FlagRemoveOutput": reflect.ValueOf(FlagRemoveOutput),
	"FlagRemoveTemplate": reflect.ValueOf(FlagRemoveTemplate),
	"FlagTemplateFile": reflect.ValueOf(FlagTemplateFile),
	"FlagVersion": reflect.ValueOf(FlagVersion),
	"FlagWorkingPath": reflect.ValueOf(FlagWorkingPath),
	"onlyOnce": reflect.ValueOf(onlyOnce),
	"SelectConvert": reflect.ValueOf(SelectConvert),
	"SelectIgnore": reflect.ValueOf(SelectIgnore),
	"SelectStdout": reflect.ValueOf(SelectStdout),
	"ToolPrefix": reflect.ValueOf(ToolPrefix),
}

